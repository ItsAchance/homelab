services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    env_file:
      - .env
    command:
      - --log.level=DEBUG
      - --api.insecure=false
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.dnschallenge=true
      - --certificatesresolvers.le.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.le.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=acme.json
      - --certificatesresolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.dockerdebian.achance.se`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.middlewares.auth.basicauth.users=${DASHBOARD_AUTH}
      - traefik.http.middlewares.ipwhitelist.ipwhitelist.sourcerange=${ALLOW_LIST}
      - traefik.http.routers.traefik.middlewares=auth,ipwhitelist
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/acme.json
    restart: unless-stopped
    networks:
      - traefik_proxy

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptime-kuma.rule=Host(`uptime-kuma.dockerdebian.achance.se`)
      - traefik.http.routers.uptime-kuma.entrypoints=websecure
      - traefik.http.routers.uptime-kuma.tls.certresolver=${CERT_RESOLVER}
    volumes:
      - /home/achance/docker/uptime-kuma-data:/app/data
    restart: unless-stopped
    networks:
      - traefik_proxy
 
  miniflux:
    image: miniflux/miniflux:latest
    container_name: miniflux
    restart: unless-stopped
    depends_on:
      miniflux-db:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.miniflux.rule=Host(`miniflux.dockerdebian.achance.se`)
      - traefik.http.routers.miniflux.entrypoints=websecure
      - traefik.http.routers.miniflux.tls.certresolver=${CERT_RESOLVER}
    environment:
      - DATABASE_URL=postgres://${MINIFLUX_DB_USER}:${MINIFLUX_DB_PW}@${MINIFLUX_DB_NAME}-db/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_USER}
      - ADMIN_PASSWORD=${MINIFLUX_PW}
      - POLLING_FREQUENCY=20
      - FETCH_YOUTUBE_WATCH_TIME=1
    networks:
      - traefik_proxy
  
  miniflux-db:
    image: postgres:17-alpine
    container_name: miniflux-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${MINIFLUX_DB_USER}
      - POSTGRES_PASSWORD=${MINIFLUX_DB_PW}
      - POSTGRES_DB=${MINIFLUX_DB_NAME}
    volumes:
      - miniflux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
    networks:
      - traefik_proxy

  linkding:
    image: sissbruecker/linkding:1.41.0
    container_name: linkding
    restart: unless-stopped
    volumes:
      - ./linkding/data/:/etc/linkding/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.linkding.rule=Host(`linkding.dockerdebian.achance.se`)
      - traefik.http.routers.linkding.entrypoints=websecure
      - traefik.http.routers.linkding.tls.certresolver=${CERT_RESOLVER}
    networks:
      - traefik_proxy
  
  wallabag:
    image: wallabag/wallabag:2.6.12
    container_name: wallabag
    restart: unless-stopped
    environment:
      - SYMFONY__ENV__DOMAIN_NAME=http://wallabag.dockerdebian.achance.se
      - SYMFONY__ENV__DATABASE_PATH=/var/www/wallabag/data/wallabag.sqlite
    volumes:
      - wallabag-db:/var/www/wallabag/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.wallabag.rule=Host(`wallabag.dockerdebian.achance.se`)
      - traefik.http.routers.wallabag.entrypoints=websecure
      - traefik.http.routers.wallabag.tls.certresolver=${CERT_RESOLVER}
    networks:
      - traefik_proxy

  archivebox:
    image: archivebox/archivebox:0.7.3
    container_name: archivebox
    command: server --quick-init 0.0.0.0:8000
    volumes:
      - archivebox-db:/data
    environment:
      - ALLOWED_HOSTS=*
      - TIME_ZONE=Europe/Stockholm
      - MEDIA_MAX_SIZE=750m
      - USE_COLOR=True
    networks:
      - traefik_proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.archivebox.rule=Host(`archivebox.dockerdebian.achance.se`)
      - traefik.http.routers.archivebox.entrypoints=websecure
      - traefik.http.routers.archivebox.tls.certresolver=${CERT_RESOLVER}
      - traefik.http.services.archivebox.loadbalancer.server.port=8000
    restart: unless-stopped

volumes:
  miniflux-db:
  wallabag-db:
  archivebox-db:

networks:
  traefik_proxy:
    external: true
